// set the dimensions and margins of the graph
var margin = {top: 30, right: 30, bottom: 70, left: 60},
    width = 460 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

// append the svg object to the body of the page
var svg = d3.select("#my_dataviz")
  .append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

// Parse the Data
d3.csv("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv", function(data) {

// X axis
var x = d3.scaleBand()
  .range([ 0, width ])
  .domain(data.map(function(d) { return d.Country; }))
  .padding(0.2);
svg.append("g")
  .attr("transform", "translate(0," + height + ")")
  .call(d3.axisBottom(x))
  .selectAll("text")
    .attr("transform", "translate(-10,0)rotate(-45)")
    .style("text-anchor", "end");

// Add Y axis
var y = d3.scaleLinear()
  .domain([0, 13000])
  .range([ height, 0]);
svg.append("g")
  .call(d3.axisLeft(y));

// Bars
svg.selectAll("mybar")
  .data(data)
  .enter()
  .append("rect")
    .attr("x", function(d) { return x(d.Country); })
    .attr("y", function(d) { return y(d.Value); })
    .attr("width", x.bandwidth())
    .attr("height", function(d) { return height - y(d.Value); })
    .attr("fill", "#69b3a2")

})

///PIE CAHRT

// This code originally taken from
// https://www.d3-graph-gallery.com/graph/pie_annotation.html

// set the dimensions and margins of the graph

var pWidth = 450
    pHeight = 450
    pMargin = 40

// The pRadius of the pieplot is half the pWidth or half the pHeight (smallest one). I subtract a bit of pMargin.
var pRadius = Math.min(pWidth, pHeight) / 2 - pMargin

// append the pieChart object to the div called 'my_dataviz'
var pieChart = d3.select("#pieChart")
  .append("svg")
    .attr("width", pWidth)
    .attr("height", pHeight)
  .append("g")
    .attr("transform", "translate(" + pWidth / 2 + "," + pHeight / 2 + ")");

// Create dummy data
var pData = {Bill: 9,
      Ben:  20,
      John: 30,
      Jane: 8,
      Tim:  12,
      Sam:  20
     }

// set the color scale
var pColor = d3.scaleOrdinal()
  .domain(pData)
  .range(d3.schemeSet2);

// Compute the position of each group on the pie:
var pie = d3.pie()
  .value(function(d) {return d.value; })
var data_ready = pie(d3.entries(pData))
// Now I know that group A goes from 0 degrees to x degrees and so on.

// shape helper to build arcs:
var arcGenerator = d3.arc()
  .innerRadius(0)
  .outerRadius(pRadius)

// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
pieChart
  .selectAll('mySlices')
  .data(data_ready)
  .enter()
  .append('path')
    .attr('d', arcGenerator)
    .attr('fill', function(d){ return(pColor(d.data.key)) })
    .attr("stroke", "black")
    .style("stroke-pWidth", "2px")
    .style("opacity", 0.7)

// Now add the annotation. Use the centroid method to get the best coordinates
pieChart
  .selectAll('mySlices')
  .data(data_ready)
  .enter()
  .append('text')
  .text(function(d){ return d.data.key + ":" + d.data.value})
  .attr("transform", function(d) { return "translate(" + arcGenerator.centroid(d) + ")";  })
  .style("text-anchor", "middle")
  .style("font-size", 17)